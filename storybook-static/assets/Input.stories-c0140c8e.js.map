{"version":3,"file":"Input.stories-c0140c8e.js","sources":["../../src/lib/components/Input.tsx"],"sourcesContent":["import { FC,ChangeEvent, useState } from 'react';\n\nexport interface TextInputProps {\n  label: string;\n  placeholder: string;\n  value: string;\n  onChange?: (event: unknown) => void;\n  onInput?: (event: unknown) => void;\n}\n\nexport const TextInput :FC<TextInputProps> = ({ label, placeholder, value, onChange,onInput }) => {\n  const [internalValue, setInternalValue] = useState(value);\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value;\n    setInternalValue(newValue);\n\n    if (onChange) {\n      onChange(newValue);\n    }\n  };\n\n  const handleInput = (event: ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value;\n    setInternalValue(newValue);\n\n    if (onInput) {\n      onInput(newValue);\n    }\n  };\n\n  return (\n    <div>\n      <label htmlFor=\"textInput\">{label}</label>\n      <input\n        id=\"textInput\"\n        type=\"text\"\n        placeholder={placeholder}\n        value={internalValue}\n        onChange={handleInputChange}\n        onInput={handleInput}\n      />\n    </div>\n  );\n};\n"],"names":["TextInput","label","placeholder","value","onChange","onInput","internalValue","setInternalValue","useState","handleInputChange","event","newValue","handleInput","jsxs","jsx"],"mappings":"6HAUO,MAAAA,EAAA,CAAA,CAAA,MAAAC,EAAA,YAAAC,EAAA,MAAAC,EAAA,SAAAC,EAAA,QAAAC,KAAA,CACL,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAAL,CAAA,EACAM,EAAAC,GAAA,CACE,MAAAC,EAAAD,EAAA,OAAA,MACAH,EAAAI,CAAA,EAEAP,GACEA,EAAAO,CAAA,CACF,EAGFC,EAAAF,GAAA,CACE,MAAAC,EAAAD,EAAA,OAAA,MACAH,EAAAI,CAAA,EAEAN,GACEA,EAAAM,CAAA,CACF,EAGF,OAAAE,EAAA,KAAA,MAAA,CAAA,SAAA,CAEIC,EAAA,IAAA,QAAA,CAAA,QAAA,YAAA,SAAAb,EAAA,EAAkCa,EAAA,IAClC,QAAC,CAAA,GAAA,YACI,KAAA,OACE,YAAAZ,EACL,MAAAI,EACO,SAAAG,EACG,QAAAG,CACD,CAAA,CACX,CAAA,CAAA,CAGN;;;;;;;;;;;;;;;"}